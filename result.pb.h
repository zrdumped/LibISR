// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: result.proto

#ifndef PROTOBUF_result_2eproto__INCLUDED
#define PROTOBUF_result_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_result_2eproto();
void protobuf_AssignDesc_result_2eproto();
void protobuf_ShutdownFile_result_2eproto();

class TracingResult;
class Command;

// ===================================================================

class TracingResult : public ::google::protobuf::Message {
 public:
  TracingResult();
  virtual ~TracingResult();

  TracingResult(const TracingResult& from);

  inline TracingResult& operator=(const TracingResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TracingResult& default_instance();

  void Swap(TracingResult* other);

  // implements Message ----------------------------------------------

  TracingResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TracingResult& from);
  void MergeFrom(const TracingResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float result = 1;
  inline int result_size() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline float result(int index) const;
  inline void set_result(int index, float value);
  inline void add_result(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      result() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_result();

  // @@protoc_insertion_point(class_scope:protocol.TracingResult)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > result_;
  friend void  protobuf_AddDesc_result_2eproto();
  friend void protobuf_AssignDesc_result_2eproto();
  friend void protobuf_ShutdownFile_result_2eproto();

  void InitAsDefaultInstance();
  static TracingResult* default_instance_;
};
// -------------------------------------------------------------------

class Command : public ::google::protobuf::Message {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Command& default_instance();

  void Swap(Command* other);

  // implements Message ----------------------------------------------

  Command* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 commandID = 1;
  inline bool has_commandid() const;
  inline void clear_commandid();
  static const int kCommandIDFieldNumber = 1;
  inline ::google::protobuf::int32 commandid() const;
  inline void set_commandid(::google::protobuf::int32 value);

  // optional int32 tracedNum = 2;
  inline bool has_tracednum() const;
  inline void clear_tracednum();
  static const int kTracedNumFieldNumber = 2;
  inline ::google::protobuf::int32 tracednum() const;
  inline void set_tracednum(::google::protobuf::int32 value);

  // repeated string tracedObjName = 3;
  inline int tracedobjname_size() const;
  inline void clear_tracedobjname();
  static const int kTracedObjNameFieldNumber = 3;
  inline const ::std::string& tracedobjname(int index) const;
  inline ::std::string* mutable_tracedobjname(int index);
  inline void set_tracedobjname(int index, const ::std::string& value);
  inline void set_tracedobjname(int index, const char* value);
  inline void set_tracedobjname(int index, const char* value, size_t size);
  inline ::std::string* add_tracedobjname();
  inline void add_tracedobjname(const ::std::string& value);
  inline void add_tracedobjname(const char* value);
  inline void add_tracedobjname(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& tracedobjname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tracedobjname();

  // @@protoc_insertion_point(class_scope:protocol.Command)
 private:
  inline void set_has_commandid();
  inline void clear_has_commandid();
  inline void set_has_tracednum();
  inline void clear_has_tracednum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 commandid_;
  ::google::protobuf::int32 tracednum_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tracedobjname_;
  friend void  protobuf_AddDesc_result_2eproto();
  friend void protobuf_AssignDesc_result_2eproto();
  friend void protobuf_ShutdownFile_result_2eproto();

  void InitAsDefaultInstance();
  static Command* default_instance_;
};
// ===================================================================


// ===================================================================

// TracingResult

// repeated float result = 1;
inline int TracingResult::result_size() const {
  return result_.size();
}
inline void TracingResult::clear_result() {
  result_.Clear();
}
inline float TracingResult::result(int index) const {
  // @@protoc_insertion_point(field_get:protocol.TracingResult.result)
  return result_.Get(index);
}
inline void TracingResult::set_result(int index, float value) {
  result_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.TracingResult.result)
}
inline void TracingResult::add_result(float value) {
  result_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.TracingResult.result)
}
inline const ::google::protobuf::RepeatedField< float >&
TracingResult::result() const {
  // @@protoc_insertion_point(field_list:protocol.TracingResult.result)
  return result_;
}
inline ::google::protobuf::RepeatedField< float >*
TracingResult::mutable_result() {
  // @@protoc_insertion_point(field_mutable_list:protocol.TracingResult.result)
  return &result_;
}

// -------------------------------------------------------------------

// Command

// required int32 commandID = 1;
inline bool Command::has_commandid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Command::set_has_commandid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Command::clear_has_commandid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Command::clear_commandid() {
  commandid_ = 0;
  clear_has_commandid();
}
inline ::google::protobuf::int32 Command::commandid() const {
  // @@protoc_insertion_point(field_get:protocol.Command.commandID)
  return commandid_;
}
inline void Command::set_commandid(::google::protobuf::int32 value) {
  set_has_commandid();
  commandid_ = value;
  // @@protoc_insertion_point(field_set:protocol.Command.commandID)
}

// optional int32 tracedNum = 2;
inline bool Command::has_tracednum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Command::set_has_tracednum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Command::clear_has_tracednum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Command::clear_tracednum() {
  tracednum_ = 0;
  clear_has_tracednum();
}
inline ::google::protobuf::int32 Command::tracednum() const {
  // @@protoc_insertion_point(field_get:protocol.Command.tracedNum)
  return tracednum_;
}
inline void Command::set_tracednum(::google::protobuf::int32 value) {
  set_has_tracednum();
  tracednum_ = value;
  // @@protoc_insertion_point(field_set:protocol.Command.tracedNum)
}

// repeated string tracedObjName = 3;
inline int Command::tracedobjname_size() const {
  return tracedobjname_.size();
}
inline void Command::clear_tracedobjname() {
  tracedobjname_.Clear();
}
inline const ::std::string& Command::tracedobjname(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Command.tracedObjName)
  return tracedobjname_.Get(index);
}
inline ::std::string* Command::mutable_tracedobjname(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Command.tracedObjName)
  return tracedobjname_.Mutable(index);
}
inline void Command::set_tracedobjname(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.Command.tracedObjName)
  tracedobjname_.Mutable(index)->assign(value);
}
inline void Command::set_tracedobjname(int index, const char* value) {
  tracedobjname_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.Command.tracedObjName)
}
inline void Command::set_tracedobjname(int index, const char* value, size_t size) {
  tracedobjname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.Command.tracedObjName)
}
inline ::std::string* Command::add_tracedobjname() {
  return tracedobjname_.Add();
}
inline void Command::add_tracedobjname(const ::std::string& value) {
  tracedobjname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.Command.tracedObjName)
}
inline void Command::add_tracedobjname(const char* value) {
  tracedobjname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.Command.tracedObjName)
}
inline void Command::add_tracedobjname(const char* value, size_t size) {
  tracedobjname_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.Command.tracedObjName)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Command::tracedobjname() const {
  // @@protoc_insertion_point(field_list:protocol.Command.tracedObjName)
  return tracedobjname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Command::mutable_tracedobjname() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Command.tracedObjName)
  return &tracedobjname_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_result_2eproto__INCLUDED
